<div class="container-fluid" id="productList">


    <!-- Page Heading -->
    <div class="mx-3">
        <b-tabs content-class="mt-3" fill>
            <b-tab active>
                <template #title>
                    <strong class="text-info">商品上架</strong>
                </template>
                <div>
                <b-modal id="myModal" size="lg" title="商品明細">                  
                        <b-img-lazy :src="currentDetail.Path" class="imgDetailStyle"></b-img-lazy>
                        <div class="row mt-3">
                            
                            <div class="col-12 mb-2">
                                <label>商品名稱</label>
                                <input  v-model="currentDetail.ProductName" class="form-control productName" type="text"/>
                            </div>
                            <div class="col-6">
                                <label>城市</label>
                                <input   v-model="currentDetail.CityName" class="form-control " type="text" />
                            </div>
                            <div class="col-6">
                                <label>類別</label>
                                <input  v-model="currentDetail.CategoryName" class="form-control" type="text" />
                            </div>
                            <div class="col-12 mt-2">
                                <label>方案</label>
                                <input  v-model="currentDetail.Title" class="form-control" type="text" />
                            </div>
                            <div class="col-12 mt-2">
                                <span class="fw-bolder border-bottom pb-2 d-block">規格</span>
                                <div class="row mt-2">
                                    <div class="col-4">
                                    <label>票種</label>
                                    <input  v-model="currentDetail.Itemtext" class="form-control" type="text" />
                                    </div>
                                    <div class="col-4">
                                        <label>單位</label>
                                        <input  v-model="currentDetail.UnitText" class="form-control" type="text" />
                                    </div>
                                    <div class="col-4">
                                        <label>單價</label>
                                        <input  v-model="currentDetail.UnitPrice" class="form-control" type="text" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-6 mt-2">
                                <label>出發日期</label>
                                <input  v-model="currentDetail.DepartureDate" class="form-control" type="text" />
                            </div>
                            <div class="col-6 mt-2">
                                <label>下架日期</label>
                                <input  v-model="currentDetail.Date" class="form-control" type="text" />
                            </div>
                            <div class="col-12 mt-2">
                                <label class="fw-bolder border-bottom pb-2 d-block">簡介</label>
                                <div id="detailInfo">

                                </div>
                            </div>
                        </div>
                          <template #modal-footer>
                              
                              <b-button size="lg" variant="outline-primary" class="revise" v-on:click="editDetail()">修改</b-button>

                          </template>
                </b-modal>


                    <b-table id="productControl" outlined striped hover :items="ProductInfoList" :fields="fields" :per-page="perPage" :current-page="currentPage">

                        <template #cell(index)="data">
                            {{ data.index + 1 }}
                        </template>

                        <template #cell(Path)="row">
                            <b-img-lazy :src="row.item.Path" class="imgStyle"></b-img-lazy>
                        </template>

                        
                        <template #cell(headerTitle)="data">                            
                            <b-button v-on:click="selectEdit(data.item)" variant="outline-primary" v-b-modal="'myModal'" class="edit">編輯</b-button>
                        </template>
                        
                        
                    </b-table>
                </div>
            </b-tab>


            <b-pagination v-model="currentPage" :per-page="perPage" aria-controls="productControl" class="mt-4" align="center" :total-rows="productCount">
                <span class="text-success">First</span>
                <span class="text-danger">Prev</span>
                <span class="text-warning">Next</span>
                <span class="text-info">Last</span>

                <b-spinner small type="grow"></b-spinner>
                <b-spinner small type="grow"></b-spinner>
                <b-spinner small type="grow"></b-spinner>


                <b v-if="active">{{ page }}</b>
                <i v-else>{{ page }}</i>

            </b-pagination>
            <b-tab>
                <template #title>
                    <strong class="text-danger">商品下架</strong>
                </template>
                <div>
                    
                </div>
            </b-tab>
        </b-tabs>


    </div>





</div>

@section topCSS{
    <style>
        .imgStyle {
            width: 120px;
            height: 85px;
            background-color: #fff;
            border: 1px solid var(--bs-border-color);
            border-radius: 0.375rem;
        }
        .imgDetailStyle{
            width:100%;
            border-radius: 0.375rem;
        }
    </style>
}


@section endJS{
    
    <script src="~/lib/BackstageCKeditor5/build/ckeditor.js"></script>

    <script>
        ClassicEditor
	        .create( document.querySelector( '#detailInfo' ), {
	            //licenseKey: '',
	            simpleUpload: {
		              uploadUrl: '/api/APICKEditor/CKEditorMedia', 
		   
	            }
	        })
	        .then( editor => {
	            window.introEditor = editor; //這句目的是 定義全域變數
	        
	            //CKEditor重要的兩個內建方法：
	            //introEditor.setData(productArray[0].Illustrate) ; 
	            //introEditor.setData('<p>0</p><p>0aa</p>') ; 
				//introEditor.getData();  這是要儲存時用的，要把整段html字串拿到，寫入DB
	        })
	        .catch( error => {
	            console.error( 'Oops, something went wrong!' );
	            console.error( 'Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:' );
	            console.warn( 'Build id: zdeudx7xcec-a1ii48rgiwrp' );
	            console.error( error );
	        });
    </script>

    <script>
     
        

        let productArray = []

        let ProductName =  document.querySelector(".productName").value
        let revise = document.querySelector(".revise")
        let readUrl = "/api/ProductApi/ReadProductInfo"
        let updateUrl = "/api/ProductApi/UpdateProductInfo"

        

        const productList = new Vue({
            el: '#productList',
            data: {
                currentPage: 1,
                perPage: 10,
                active: true,
                page: 1,
                fields: [
                    
                    { key: 'index', label: '商品順序', sortable: true , sortDirection: 'desc' },
                    { key: 'ProductId', label: '商品編號', sortable: true, sortDirection: 'desc' },
                    { key: 'Path', label: '商品圖片' },
                    { key: 'ProductName', label: '商品名稱' },
                    { key: 'CityName', label: '城市', sortable: true, sortDirection: 'desc' },
                    { key: 'CategoryName', label: '分類', sortable: true, sortDirection: 'desc' },
                    { key: 'UnitPrice', label: '單價', sortable: true, sortDirection: 'desc' },
                    { headerTitle: "商品明細" }
                    
                ],
                ProductInfoList: productArray,
                //編輯
                currentDetail: {},
                currentDetailResult:null
            },
            computed: {
                productCount() {
                    return this.ProductInfoList.length
                }
            },
            methods: {
                selectEdit(Detail) {
                    this.currentDetail = { ...Detail }
                    console.log(this.currentDetail)
                },
                editDetail() {
                    
                    fetch(updateUrl,{
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            ProductId: this.currentDetail.ProductId,
                            ProductName: document.querySelector(".productName").value

                        })
                    })
                    .then(res => {
                        if (res.ok) {
                            window.location.reload();
                            alert("更新成功");
                        }
                        else {
                            alert("更新失敗");
                        }
                    })
                    
                }
            }




        })
        
        
            
            
        
        window.onload = function() {


            


            ReadFetch(readUrl)
            
            

        }
        
        function ReadFetch(Url) {
            

                fetch(Url, {
                    method: 'get',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(res => {
                    if (res.ok) {

                        Promise.resolve(res.json().then(function(result) {
                            result.map(function(value) {
                                productArray.push(value)

                            })
                        }))
                    }

                })
        }

        
           

    </script>

   

}